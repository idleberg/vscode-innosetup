{
    "name": "innosetup",
    "displayName": "Inno Setup",
    "description": "Language syntax, snippets and build system for Inno Setup",
    "version": "1.6.1",
    "publisher": "idleberg",
    "license": "MIT",
    "author": {
        "name": "Jan T. Sott",
        "url": "http://github.com/idleberg"
    },
    "scripts": {
        "compile": "npm run build",
        "build": "node ./tools/build.cjs",
        "dev": "npm run start",
        "fix": "eslint --fix ./src",
        "lint:json": "jsonlint --quiet ./snippets/*.json",
        "lint:ts": "eslint ./src --ignore-path .gitignore",
        "lint": "npm-run-all  --parallel lint:*",
        "start": "cross-env NODE_ENV=development node ./tools/build.cjs",
        "test": "npm run lint",
        "vscode:prepublish": "npm run build"
    },
    "keywords": [
        "inno setup",
        "inno pascal",
        "innosetup",
        "innopascal",
        "installer"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/idleberg/vscode-innosetup"
    },
    "homepage": "https://github.com/idleberg/vscode-innosetup#readme",
    "bugs": {
        "url": "https://github.com/idleberg/vscode-innosetup/issues"
    },
    "main": "./lib/extension",
    "engines": {
        "vscode": "^1.0.0"
    },
    "categories": [
        "Programming Languages",
        "Snippets",
        "Other"
    ],
    "activationEvents": [
        "onLanguage:innosetup"
    ],
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Inno Setup",
            "properties": {
                "innosetup.pathToIscc": {
                    "type": "string",
                    "default": "ISCC.exe",
                    "description": "Specify the full path to `ISCC`"
                },
                "innosetup.showNotifications": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show build notifications indicating success or failure"
                },
                "innosetup.alwaysShowOutput": {
                    "type": "boolean",
                    "default": true,
                    "description": "If `false` the output channel will only be shown on errors"
                },
                "innosetup.alwaysOpenBuildTask": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specify whether to open the newly created build task"
                }
            }
        },
        "languages": [
            {
                "id": "innosetup",
                "aliases": [
                    "Inno Setup",
                    "InnoSetup",
                    "innosetup"
                ],
                "extensions": [
                    ".isl",
                    ".iss"
                ],
                "configuration": "./config/inno-setup.json"
            },
            {
                "id": "innopascal",
                "aliases": [
                    "Inno Pascal",
                    "InnoPascal",
                    "innopascal"
                ]
            }
        ],
        "grammars": [
            {
                "language": "innosetup",
                "scopeName": "source.inno",
                "path": "./syntaxes/inno-setup.tmLanguage"
            },
            {
                "language": "innopascal",
                "scopeName": "source.pascal.inno",
                "path": "./syntaxes/inno-pascal.tmLanguage"
            }
        ],
        "commands": [
            {
                "command": "extension.innosetup.compile",
                "title": "Inno Setup: Save & Compile Script",
                "icon": {
                    "dark": "./images/icon--build-dark.svg",
                    "light": "./images/icon--build-light.svg"
                }
            },
            {
                "command": "extension.innosetup.create-build-task",
                "title": "Inno Setup: Create Build Task",
                "icon": {
                    "dark": "./images/icon--task-dark.svg",
                    "light": "./images/icon--task-light.svg"
                }
            }
        ],
        "keybindings": [
            {
                "key": "shift+alt+b",
                "when": "editorFocus && editorLangId == innosetup",
                "command": "extension.innosetup.compile"
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "when": "resourceLangId == innosetup",
                    "command": "extension.innosetup.compile",
                    "group": "navigation@1"
                },
                {
                    "when": "resourceLangId == innosetup",
                    "command": "extension.innosetup.create-build-task",
                    "group": "navigation@3"
                }
            ]
        },
        "snippets": [
            {
                "language": "innosetup",
                "path": "./snippets/inno-setup.json"
            },
            {
                "language": "innopascal",
                "path": "./snippets/inno-pascal.json"
            }
        ]
    },
    "extensionDependencies": [],
    "dependencies": {
        "vscode-get-config": "^0.4.0"
    },
    "devDependencies": {
        "@babel/core": "^7.14.5",
        "@babel/preset-env": "^7.14.5",
        "@babel/register": "^7.14.5",
        "@types/node": "^15.12.2",
        "@typescript-eslint/eslint-plugin": "^4.26.1",
        "@typescript-eslint/parser": "^4.26.1",
        "cross-env": "^7.0.3",
        "esbuild": "^0.12.8",
        "eslint": "^7.28.0",
        "eslint-plugin-json": "^3.0.0",
        "husky": ">=4 <5",
        "jsonlint": "^1.6.3",
        "lint-staged": "^11.0.0",
        "npm-run-all": "^4.1.5",
        "tslib": "^2.3.0",
        "tslint": "^6.1.3",
        "typescript": "^4.3.2",
        "@types/vscode": "^1.0.0"
    },
    "babel": {
        "presets": [
            "@babel/env"
        ]
    },
    "husky": {
        "hooks": {
            "pre-commit": "lint-staged"
        }
    },
    "lint-staged": {
        "*.ts": "eslint --cache --fix",
        "*.json": "jsonlint --quiet"
    }
}
